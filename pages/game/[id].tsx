import Head from "next/head";
import type { NextPage } from "next";
import styles from "../../styles/Game.module.scss";
import Canvas, { PaintProps } from "../../components/Canvas";
import { io, Socket } from "socket.io-client";
import React from "react";

type Chat = {
  name: string;
  text: string;
};

const Game: NextPage = () => {
  const socketRef = React.useRef<Socket>();
  const canvasCtxRef = React.useRef<CanvasRenderingContext2D>();
  const [messages, setMessages] = React.useState<Chat[]>([]);
  const [inputValue, setInputValue] = React.useState("");

  React.useEffect(() => {
    if (!socketRef.current) {
      socketRef.current = io("http://localhost:4000");

      socketRef.current.on("clear_canvas", () => {
        canvasCtxRef.current?.clearRect(0, 0, 1000, 600);
      });

      socketRef.current.on("receive_message", (data) => {
        console.log(data);

        setMessages((prev) => [...prev, data]);
      });

      socketRef.current.on("repaint", ({ x, y, mx, my }) => {
        console.log(x);

        if (canvasCtxRef.current) {
          canvasCtxRef.current.beginPath();
          canvasCtxRef.current.moveTo(x, y);
          canvasCtxRef.current.lineTo(x - mx, y - my);
          canvasCtxRef.current.stroke();
          canvasCtxRef.current.closePath();
        }
      });
      return () => {
        socketRef.current?.disconnect()
      }
    }
  }, []);

  const onMouseMove = (data: PaintProps) => {
    socketRef.current?.emit("paint", data);
  };

  const onClear = () => {
    socketRef.current?.emit("clear");
    canvasCtxRef.current?.clearRect(0, 0, 1000, 600);
  };

  const onSendMessage = () => {
    socketRef.current?.emit("send_message", {
      name: "Vasya",
      text: inputValue,
    });
    setInputValue("");
  };

  return (
    <div>
      <Head>
        <title>Игра</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className={styles.game}>
        <div className={styles.chat}>
          <div className={styles.chatTitle}>Chat title</div>
          <div className={styles.chatMessages}>
            {messages?.map((message, index) => (
              <div key={index} className={styles.chatItem}>
                <b>{message.name}</b>
                <p>{message.text}</p>
              </div>
            ))}
          </div>
          <div className={styles.chatInput}>
            <input
              value={inputValue}
              type="text"
              onChange={(event) => setInputValue(event.target.value)}
            />
            <button onClick={onSendMessage}>Send</button>
          </div>
        </div>
        <div className={styles.canvas}>
          <Canvas
            onMouseMove={onMouseMove}
            onInit={(canvasCtx) => (canvasCtxRef.current = canvasCtx)}
            onClear={onClear}
          />
        </div>
      </div>
    </div>
  );
};

export default Game;
